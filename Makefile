SHELL:=/usr/bin/env bash

LCACHE ?= $(shell readlink -f ~/.cache/python-testing/pypoetry)
PCACHE ?= /home/qs5779/.cache/pypoetry
PROJECT ?= $(shell git rev-parse --show-toplevel)
PROJECT_VERSION ?= $(shell grep ^current_version .bumpversion.cfg | awk '{print $$NF'} | tr '-' '.')
WHEELS ?= /home/jim/kbfs/private/jim5779/wheels
DISTRO ?= ubuntu20.04
PYVERS = 3.10.9

.PHONY: showvirt vars black mypy lint sunit unit package test publish publish-test
vars:
	@echo "PCACHE: $(PCACHE)"
	@echo "LCACHE: $(LCACHE)"

showvirt:
	ls -l $(LCACHE)/virtualenvs

black:
	poetry run isort .
	poetry run black .

mypy: black
	poetry run mypy wtforglib tests/**/*.py

lint: mypy
	poetry run flake8 .
	poetry run doc8 -q docs

sunit:
	poetry run pytest -s tests

unit:
	poetry run pytest tests

package:
	poetry check
	poetry run pip check
	# re-enable when safety supports packaging ^22.0
	# poetry run safety check --full-report

test: lint package unit

publish: test
	poetry publish --build

publish-test: test
	poetry publish --build -r test-pypi

build: test
	poetry build
	cp dist/wtforglib-$(PROJECT_VERSION)-py3-none-any.whl $(WHEELS)
	sync-wheels

.PHONY: work37 work38 work39 work311 work
work37:
	docker run --rm -it --volume $(PROJECT):/project/ --volume $(LCACHE):$(PCACHE) qs5779/python-testing:ubuntu20.04-3.7.16 /bin/bash

work38:
	docker run --rm -it --volume $(PROJECT):/project/ --volume $(LCACHE):$(PCACHE) qs5779/python-testing:ubuntu20.04-3.8.16 /bin/bash

work39:
	docker run --rm -it --volume $(PROJECT):/project/ --volume $(LCACHE):$(PCACHE) qs5779/python-testing:ubuntu20.04-3.9.14 /bin/bash

work311:
	docker run --rm -it --volume $(PROJECT):/project/ --volume $(LCACHE):$(PCACHE) qs5779/python-testing:ubuntu20.04-3.11.2 /bin/bash

work:
	docker run --rm -it --volume $(PROJECT):/project/ --volume $(LCACHE):$(PCACHE) qs5779/python-testing:$(DISTRO)-$(PYVERS) /bin/bash

.PHONY: chlog docs
chlog:
	github_changelog_generator -u wtfo-guru -p wtforglib
	sed -i -e '/^$$/N;/^\n$$/D' ./CHANGELOG.md
	m2r2 --overwrite --anonymous-references CHANGELOG.md
	sed -i '/This Changelog was automatically generated by/d' ./CHANGELOG.rst
	mv -f ./CHANGELOG.rst ./docs/pages/changelog.rst
	poetry run doc8 -q docs

docs:
	@cd docs && $(MAKE) $@

.PHONY: clean clean-build clean-pyc clean-test
clean: clean-build clean-pyc clean-test ## remove all build, test, coverage and Python artifacts

clean-build: ## remove build artifacts
	rm -fr build/
	rm -fr docs/_build
	rm -fr dist/
	rm -fr .eggs/
	find . -name '*.egg-info' -exec rm -fr {} +
	find . -name '*.egg' -exec rm -f {} +

clean-pyc: ## remove Python file artifacts
	find . -name '*.pyc' -exec rm -f {} +
	find . -name '*.pyo' -exec rm -f {} +
	find . -name '*~' -exec rm -f {} +
	find . -name '__pycache__' -exec rm -fr {} +

clean-test: ## remove test and coverage artifacts
	rm -fr .tox/
	rm -f .coverage
	rm -fr htmlcov/
	rm -fr .pytest_cache
	rm -fr .mypy_cache
